configfile: 'config.yaml'

rule all:
    input:
        bestTree = "RAxML_bestTree.{config[raxml_output_name]}",
        bipartitions = "RAxML_bipartitions.{config[raxml_output_name]}",
        BranchLabels = "RAxML_bipartitionsBranchLabels.{config[raxml_output_name]}",
        bootstrap = "RAxML_bootstrap.{config[raxml_output_name]}",
        info = "RAxML_info.{config[raxml_output_name]}"

rule fetch_sequences:
    output:
        sequences = 'odb_sequences.fasta'
    script:
        'scripts/fetch_odb_sequences.py'

rule align_trim_concatenate:
    input:
        sequences = rules.fetch_sequences.output.sequences
    output:
        msa = 'align_trim_conc_sequences.fasta'
    script:
        'scripts/align_trim_concatenate.py'

rule build_tree:
    input:
        rules.align_trim_concatenate.output.msa
    output:
        bestTree = "RAxML_bestTree.{config[raxml_output_name]}",
        bipartitions = "RAxML_bipartitions.{config[raxml_output_name]}",
        BranchLabels = "RAxML_bipartitionsBranchLabels.{config[raxml_output_name]}",
        bootstrap = "RAxML_bootstrap.{config[raxml_output_name]}",
        info = "RAxML_info.{config[raxml_output_name]}"
    log:
        'RAxML_log.txt'
    shell:
        "raxmlHPC-PTHREADS -T {config[raxml_cores]} -s {input} -n {config[raxml_output_name]} \
        -o {config[outgroup]} -N {config[bootstraps]} -m {config[model]} -f {config[algorithm]} \
        -x {config[rapid_bootstrap_seed]} -p {config[parsimony_seed]}"
